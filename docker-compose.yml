services:
  figth-1:
    image: spring-native
    container_name: service_1
    restart: unless-stopped
    environment:
      - DB_URL=jdbc:postgresql://postgres:5432/figth_db
      - DB_USER=figth_user
      - DB_PASSWORD=figth_password
      - PAYMENT_PROCESSOR_URL=http://payment-processor-default:8080
      - LOG_LEVEL=ERROR
      - HIBERNATE_SHOW_SQL=false
      - HIKARI_MAX_POOL_SIZE=35
      - HIKARI_MIN_IDLE=10
      - HIKARI_CONNECTION_TIMEOUT=10000
      - HIKARI_IDLE_TIMEOUT=300000
      - HIKARI_MAX_LIFETIME=900000
      - HIKARI_LEAK_DETECTION=30000
    # Removido o mapeamento de porta externa - apenas interna
    expose:
      - "8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - figth-network
      - payment-processor
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 80M

  figth-2:
    image: spring-native
    container_name: service_2
    restart: unless-stopped
    environment:
      - DB_URL=jdbc:postgresql://postgres:5432/figth_db
      - DB_USER=figth_user
      - DB_PASSWORD=figth_password
      - PAYMENT_PROCESSOR_URL=http://payment-processor-default:8080
      - LOG_LEVEL=ERROR
      - HIBERNATE_SHOW_SQL=false
      - HIKARI_MAX_POOL_SIZE=35
      - HIKARI_MIN_IDLE=10
      - HIKARI_CONNECTION_TIMEOUT=10000
      - HIKARI_IDLE_TIMEOUT=300000
      - HIKARI_MAX_LIFETIME=900000
      - HIKARI_LEAK_DETECTION=30000
    # Removido o mapeamento de porta externa - apenas interna
    expose:
      - "8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - figth-network
      - payment-processor
    deploy:
      resources:
        limits:
          cpus: '0.3'
          memory: 80M

  nginx:
    image: nginx:alpine
    container_name: figth-nginx
    restart: unless-stopped
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - figth-1
      - figth-2
    networks:
      - figth-network
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 10M

  postgres:
    image: postgres:17-alpine
    container_name: figth-postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: figth_db
      POSTGRES_USER: figth_user
      POSTGRES_PASSWORD: figth_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8 --lc-collate=C --lc-collate=C"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - figth-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U figth_user -d figth_db"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    # Configurações otimizadas para performance
    command: >
      postgres
      -c max_connections=100
      -c shared_buffers=32MB
      -c effective_cache_size=64MB
      -c maintenance_work_mem=8MB
      -c checkpoint_completion_target=0.9
      -c wal_buffers=8MB
      -c default_statistics_target=100
      -c random_page_cost=1.1
      -c effective_io_concurrency=200
      -c work_mem=1MB
      -c min_wal_size=1GB
      -c max_wal_size=2GB
      -c checkpoint_timeout=600
      -c full_page_writes=off
    deploy:
      resources:
        limits:
          cpus: '0.7'
          memory: 180M

volumes:
  portainer_data:
  postgres_data:
    driver: local

networks:
  figth-network:
    driver: bridge
  payment-processor:
    external: true 