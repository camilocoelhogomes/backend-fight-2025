name: Release (version bump + multi-arch image publish)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: write
  packages: write

concurrency:
  group: release-${{ github.ref }}
  cancel-in-progress: false

jobs:
  release:
    name: Version, build and publish
    # Evita loop quando o prÃ³prio job faz commit com [skip ci]
    if: github.event_name == 'pull_request' || (github.event_name == 'push' && !contains(github.event.head_commit.message, '[skip ci]'))
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: '21'

      - name: Compute next version from latest tag (push only)
        id: setver
        if: github.event_name == 'push'
        run: |
          git fetch --tags --force
          LAST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          BASE=${LAST_TAG#v}
          IFS='.' read -r MAJOR MINOR PATCH <<< "$BASE"
          NEW_VER="${MAJOR}.${MINOR}.$((PATCH+1))"
          echo "version=$NEW_VER" >> "$GITHUB_OUTPUT"

      - name: Set pom.xml version (push only)
        if: github.event_name == 'push'
        run: |
          mvn -B -q org.codehaus.mojo:versions-maven-plugin:2.16.2:set -DnewVersion=${{ steps.setver.outputs.version }}
          mvn -B -q org.codehaus.mojo:versions-maven-plugin:2.16.2:commit

      - name: Commit version bump (push only)
        if: github.event_name == 'push'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add pom.xml
          git commit -m "chore: bump version to ${{ steps.setver.outputs.version }} [skip ci]" || echo "No changes to commit"
          git push origin HEAD:main || true

      - name: Create and push git tag (push only)
        if: github.event_name == 'push'
        run: |
          git tag "v${{ steps.setver.outputs.version }}" -f
          git push origin "v${{ steps.setver.outputs.version }}" -f

      - name: Repository name lowercase
        id: repo
        run: |
          echo "name=$(echo '${{ github.repository }}' | tr '[:upper:]' '[:lower:]')" >> "$GITHUB_OUTPUT"

      - name: Set image tag
        id: img
        run: |
          if [ "${{ github.event_name }}" = "push" ]; then
            echo "tag=${{ steps.setver.outputs.version }}" >> "$GITHUB_OUTPUT"
          else
            echo "tag=pr-${{ github.event.number }}" >> "$GITHUB_OUTPUT"
          fi

      - name: Check for changes in src/
        id: changes
        uses: dorny/paths-filter@v3
        with:
          filters: |
            src:
              - 'src/**'

      - name: Set up QEMU
        if: steps.changes.outputs.src == 'true'
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        if: steps.changes.outputs.src == 'true'
        uses: docker/setup-buildx-action@v3

      - name: Login to GHCR
        if: steps.changes.outputs.src == 'true'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push (multi-arch)
        if: steps.changes.outputs.src == 'true'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.head.repo.fork == false) }}
          tags: ghcr.io/${{ steps.repo.outputs.name }}:${{ steps.img.outputs.tag }} 